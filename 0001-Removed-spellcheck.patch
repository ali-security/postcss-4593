From 7ccd46714ecd5d71cb4d50ba30916a9867b93dd9 Mon Sep 17 00:00:00 2001
From: Seal <info@sealsecurity.io>
Date: Tue, 3 Oct 2023 19:27:30 +0300
Subject: [PATCH] CVE-2023-44270

---
 lib/tokenize.js    | 2 +-
 test/parse.test.ts | 6 ++++++
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/lib/tokenize.js b/lib/tokenize.js
index 5a9ed176..39a20a37 100644
--- a/lib/tokenize.js
+++ b/lib/tokenize.js
@@ -22,7 +22,7 @@ const AT = '@'.charCodeAt(0)
 
 const RE_AT_END = /[\t\n\f\r "#'()/;[\\\]{}]/g
 const RE_WORD_END = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g
-const RE_BAD_BRACKET = /.[\n"'(/\\]/
+const RE_BAD_BRACKET = /.[\r\n"'(/\\]/
 const RE_HEX_ESCAPE = /[\da-f]/i
 
 module.exports = function tokenizer(input, options = {}) {
diff --git a/test/parse.test.ts b/test/parse.test.ts
index 4ab6c2f2..13de8985 100755
--- a/test/parse.test.ts
+++ b/test/parse.test.ts
@@ -34,6 +34,12 @@ test('should has false at hasBOM property', () => {
   is(css.first?.source?.input.hasBOM, false)
 })
 
+test('parses carrier return', () => {
+  throws(() => {
+    parse('@font-face{ font:(\r/*);} body { a: "a*/)} a{}"}')
+  }, /:1:46: Unclosed string/)
+})
+
 test('saves source file', () => {
   let css = parse('a {}', { from: 'a.css' })
   is(css.first?.source?.input.css, 'a {}')
-- 
2.39.3

